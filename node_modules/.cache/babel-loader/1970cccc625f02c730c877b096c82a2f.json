{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.customRouteMatcherOptions = exports.matcherOptions = exports.pathToRegexp = void 0;\n\nvar pathToRegexp = _interopRequireWildcard(require(\"next/dist/compiled/path-to-regexp\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nexports.pathToRegexp = pathToRegexp;\nconst matcherOptions = {\n  sensitive: false,\n  delimiter: '/'\n};\nexports.matcherOptions = matcherOptions;\nconst customRouteMatcherOptions = { ...matcherOptions,\n  strict: true\n};\nexports.customRouteMatcherOptions = customRouteMatcherOptions;\n\nvar _default = function () {\n  let customRoute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return (path, regexModifier) => {\n    const keys = [];\n    let matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);\n\n    if (regexModifier) {\n      const regexSource = regexModifier(matcherRegex.source);\n      matcherRegex = new RegExp(regexSource, matcherRegex.flags);\n    }\n\n    const matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);\n    return (pathname, params) => {\n      const res = pathname == null ? false : matcher(pathname);\n\n      if (!res) {\n        return false;\n      }\n\n      if (customRoute) {\n        for (const key of keys) {\n          // unnamed params should be removed as they\n          // are not allowed to be used in the destination\n          if (typeof key.name === 'number') {\n            delete res.params[key.name];\n          }\n        }\n      }\n\n      return { ...params,\n        ...res.params\n      };\n    };\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/path-match.ts"],"names":[],"mappings":";;;;;;;AAAY,IAAA,YAAY,GAAA,uBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEH,Y,GAFG,Y;AAIL,MAAM,cAAc,GACG;AAC5B,EAAA,SAAS,EAAE,KADiB;AAE5B,EAAA,SAAS,EAAE;AAFiB,CADvB;QAAM,c,GAAA,c;AAMN,MAAM,yBAAyB,GACR,E,GACzB,cADyB;AAE5B,EAAA,MAAM,EAAE;AAFoB,CADvB;QAAM,yB,GAAA,yB;;2BAM2B;AAAA,MAAxB,WAAwB,uEAAV,KAAU;AACtC,SAAM,CAAE,IAAF,EAAgB,aAAhB,KAA8D;AAClE,UAAM,IAAI,GAAuB,EAAjC;AACA,QAAI,YAAY,GAnBR,YAAY,CAmBY,YAnBxB,CAoBN,IApBM,EAqBN,IArBM,EAsBN,WAAW,GAAG,yBAAH,GAA+B,cAtBpC,CAmBR;;AAMA,QAAI,aAAJ,EAAmB;AACjB,YAAM,WAAW,GAAG,aAAa,CAAC,YAAY,CAAC,MAAd,CAAjC;AACA,MAAA,YAAY,GAAG,IAAI,MAAJ,CAAW,WAAX,EAAwB,YAAY,CAAC,KAArC,CAAf;AACD;;AAED,UAAM,OAAO,GA9BL,YAAY,CA8BS,gBA9BrB,CA8BsC,YA9BtC,EA8BoD,IA9BpD,CA8BR;AAEA,WAAM,CAAE,QAAF,EAAuC,MAAvC,KAAwD;AAC5D,YAAM,GAAG,GAAG,QAAQ,IAAI,IAAZ,GAAmB,KAAnB,GAA2B,OAAO,CAAC,QAAD,CAA9C;;AACA,UAAE,CAAG,GAAL,EAAU;AACR,eAAO,KAAP;AACD;;AAED,UAAI,WAAJ,EAAiB;AACf,aAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB;AACtB;AACA;AACA,cAAI,OAAO,GAAG,CAAC,IAAX,KAAoB,QAAxB,EAAkC;AAChC,mBAAQ,GAAG,CAAC,MAAJ,CAAmB,GAAG,CAAC,IAAvB,CAAR;AACD;AACF;AACF;;AAED,aAAO,E,GAAK,MAAL;WAAgB,GAAG,CAAC;AAApB,OAAP;AACD,KAjBD;AAkBD,GAjCD;AAkCD,C","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = exports.customRouteMatcherOptions = exports.matcherOptions = exports.pathToRegexp = void 0;\nvar pathToRegexp = _interopRequireWildcard(require(\"next/dist/compiled/path-to-regexp\"));\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {\n        };\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {\n                    };\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nexports.pathToRegexp = pathToRegexp;\nconst matcherOptions = {\n    sensitive: false,\n    delimiter: '/'\n};\nexports.matcherOptions = matcherOptions;\nconst customRouteMatcherOptions = {\n    ...matcherOptions,\n    strict: true\n};\nexports.customRouteMatcherOptions = customRouteMatcherOptions;\nvar _default = (customRoute = false)=>{\n    return (path, regexModifier)=>{\n        const keys = [];\n        let matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);\n        if (regexModifier) {\n            const regexSource = regexModifier(matcherRegex.source);\n            matcherRegex = new RegExp(regexSource, matcherRegex.flags);\n        }\n        const matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);\n        return (pathname, params)=>{\n            const res = pathname == null ? false : matcher(pathname);\n            if (!res) {\n                return false;\n            }\n            if (customRoute) {\n                for (const key of keys){\n                    // unnamed params should be removed as they\n                    // are not allowed to be used in the destination\n                    if (typeof key.name === 'number') {\n                        delete res.params[key.name];\n                    }\n                }\n            }\n            return {\n                ...params,\n                ...res.params\n            };\n        };\n    };\n};\nexports.default = _default;\n\n//# sourceMappingURL=path-match.js.map"]},"metadata":{},"sourceType":"script"}