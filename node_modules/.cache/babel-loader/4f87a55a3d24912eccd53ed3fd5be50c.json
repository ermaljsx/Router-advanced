{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franci\\\\Desktop\\\\starting-projects-Udemy\\\\10-starting-project (authentication)\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const handleSwitchAuthMode = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // *optional -> adding validation\n\n    if (isLogin) {} else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (!res.ok) {// ...\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Authentication message failed!\";\n            errorMessage = data.error.message;\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: handleSwitchAuthMode,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"v+15WN9fgutq8K+WE0CA2YEe3tM=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/Franci/Desktop/starting-projects-Udemy/10-starting-project (authentication)/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","handleSwitchAuthMode","prevState","handleSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import {\n  useState,\n  useRef\n} from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef ();\n  const passwordInputRef = useRef ();\n  const [ isLogin, setIsLogin ] = useState ( true );\n\n  const handleSwitchAuthMode = () => {\n    setIsLogin (\n      ( prevState ) => !prevState\n    );\n  };\n\n  const handleSubmit = ( event ) => {\n    event.preventDefault ();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // *optional -> adding validation\n\n    if ( isLogin ) {\n\n    } else {\n      fetch (\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\",\n        {\n          method: \"POST\",\n          body: JSON.stringify ({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      ).then(\n        ( res ) => {\n          if ( !res.ok ) {\n            // ...\n          } else {\n            return res.json().then(\n              ( data ) => {\n                let errorMessage = \"Authentication message failed!\"\n                errorMessage = data.error.message;\n              }\n            );\n          };\n        }\n      );\n    };\n  };\n\n  return (\n    <section className = { classes.auth }>\n      \n      <h1>\n        {\n          isLogin ? \"Login\" : \"Sign Up\"\n        }\n      </h1>\n\n      <form onSubmit = { handleSubmit }>\n        \n        <div className = { classes.control }>\n\n          <label htmlFor = \"email\">\n            Your Email\n          </label>\n\n          <input\n            type = \"email\"\n            id = \"email\"\n            ref = { emailInputRef }\n            required\n          />\n\n        </div>\n\n        <div className = { classes.control }>\n\n          <label htmlFor = \"password\">\n            Your Password\n          </label>\n\n          <input\n            type = \"password\"\n            id = \"password\"\n            ref = { passwordInputRef }\n            required\n          />\n\n        </div>\n\n        <div className = { classes.actions }>\n\n          <button>\n            {\n              isLogin ? \"Login\" : \"Create Account\"\n            }\n          </button>\n\n          <button\n            type = \"button\"\n            className = { classes.toggle }\n            onClick = { handleSwitchAuthMode }\n          >\n            {\n              isLogin ? \"Create new account\" : \"Login with existing account\"\n            }\n          </button>\n        \n        </div>\n      \n      </form>\n\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}