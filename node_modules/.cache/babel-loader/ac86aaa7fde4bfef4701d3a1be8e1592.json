{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franci\\\\Desktop\\\\starting-projects-Udemy\\\\10-starting-project (authentication)\\\\src\\\\components\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const tokenData = retrieveStoredToken();\n  const userIsLoggedIn = !!token;\n\n  const handleLogin = token => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const handleLogout = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: handleLogin,\n    logout: handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"QgyHM4F3uJJIw1QUN1sYV/PT1FU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Franci/Desktop/starting-projects-Udemy/10-starting-project (authentication)/src/components/store/auth-context.js"],"names":["React","useState","useCallback","createContext","logoutTimer","AuthContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","setToken","tokenData","userIsLoggedIn","handleLogin","setItem","setTimeout","logoutHandler","handleLogout","clearTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAEIC,QAFJ,EAGIC,WAHJ,EAIIC,aAJJ,QAKO,OALP;;AAOA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAE;AAC/BG,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,UAAU,EAAE,KAFmB;AAG/BC,EAAAA,KAAK,EAAIF,KAAF,IAAa,CAAE,CAHS;AAI/BG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJe,CAAF,CAAjC;;AAOA,MAAMC,sBAAsB,GAAKC,cAAF,IAAsB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAAUF,cAAV,EAA2BG,OAA3B,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AAEA,SAAOI,iBAAP;AACH,CAPD;;AASA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,QAAME,aAAa,GAAGZ,sBAAsB,CAAGW,oBAAH,CAA5C;;AAEA,MAAKC,aAAa,IAAI,IAAtB,EAA6B;AAC3BH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACD;;AAED,SAAO;AACLjB,IAAAA,KAAK,EAAEY,WADF;AAELM,IAAAA,QAAQ,EAAEF;AAFL,GAAP;AAID,CAhBD;;AAkBA,OAAO,MAAMG,mBAAmB,GAAKC,KAAF,IAAa;AAAA;;AAE5C,QAAM,CAAEpB,KAAF,EAASqB,QAAT,IAAsB1B,QAAQ,CAAG,IAAH,CAApC;AACA,QAAM2B,SAAS,GAAGX,mBAAmB,EAArC;AAEA,QAAMY,cAAc,GAAG,CAAC,CAACvB,KAAzB;;AAEA,QAAMwB,WAAW,GAAKxB,KAAF,IAAa;AAC7BqB,IAAAA,QAAQ,CAAGrB,KAAH,CAAR;AACAa,IAAAA,YAAY,CAACY,OAAb,CAAsB,OAAtB,EAA+BzB,KAA/B;AACAa,IAAAA,YAAY,CAACY,OAAb,CAAsB,gBAAtB,EAAwCpB,cAAxC;AAEA,UAAMW,aAAa,GAAGZ,sBAAsB,CAAEC,cAAF,CAA5C;AAEAP,IAAAA,WAAW,GAAG4B,UAAU,CAAEC,aAAF,EAAiBX,aAAjB,CAAxB;AACH,GARD;;AAUA,QAAMY,YAAY,GAAGhC,WAAW,CAAG,MAAM;AACrCyB,IAAAA,QAAQ,CAAG,IAAH,CAAR;AACAR,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;;AAEA,QAAKnB,WAAL,EAAmB;AACf+B,MAAAA,YAAY,CAAE/B,WAAF,CAAZ;AACH;AACJ,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,QAAMgC,YAAY,GAAG;AACjB9B,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAAEsB,cAFK;AAGjBrB,IAAAA,KAAK,EAAEsB,WAHU;AAIjBrB,IAAAA,MAAM,EAAEyB;AAJS,GAArB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAKE,YAAhC;AAAA,cACMV,KAAK,CAACW;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCM;;GAAMZ,mB;;KAAAA,mB;AAyCb,eAAepB,WAAf","sourcesContent":["import React,\r\n{\r\n    useState,\r\n    useCallback,\r\n    createContext\r\n} from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = createContext ({\r\n    token: \"\",\r\n    isLoggedIn: false,\r\n    login: ( token ) => {},\r\n    logout: () => {}\r\n});\r\n\r\nconst calculateRemainingTime = ( expirationTime ) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date( expirationTime ).getTime();\r\n  \r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n  \r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime ( storedExpirationDate );\r\n\r\n  if ( remainingTime <= 3600 ) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = ( props ) => {\r\n\r\n    const [ token, setToken ] = useState ( null );\r\n    const tokenData = retrieveStoredToken();\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const handleLogin = ( token ) => {\r\n        setToken ( token );\r\n        localStorage.setItem( \"token\", token );\r\n        localStorage.setItem( \"expirationTime\", expirationTime );\r\n    \r\n        const remainingTime = calculateRemainingTime( expirationTime );\r\n    \r\n        logoutTimer = setTimeout( logoutHandler, remainingTime );\r\n    };\r\n\r\n    const handleLogout = useCallback ( () => {\r\n        setToken ( null );\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"expirationTime\");\r\n\r\n        if ( logoutTimer ) {\r\n            clearTimeout( logoutTimer );\r\n        }\r\n    }, []);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: handleLogin,\r\n        logout: handleLogout\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value = { contextValue }>\r\n            { props.children }\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}