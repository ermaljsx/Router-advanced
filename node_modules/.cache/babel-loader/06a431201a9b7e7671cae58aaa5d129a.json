{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseUrl = parseUrl;\n\nvar _querystring = require(\"./querystring\");\n\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\n\nfunction parseUrl(url) {\n  if (url.startsWith('/')) {\n    return (0, _parseRelativeUrl).parseRelativeUrl(url);\n  }\n\n  const parsedURL = new URL(url);\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-url.ts"],"names":[],"mappings":";;;;;QAgBgB,Q,GAAA,Q;;AAduB,IAAA,YAAe,GAAA,OAAA,CAAA,eAAA,CAAf;;AACN,IAAA,iBAAsB,GAAA,OAAA,CAAA,sBAAA,CAAtB;;SAajB,Q,CAAS,G,EAAwB;AAC/C,MAAI,GAAG,CAAC,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACvB,WAAM,CAAA,GAfuB,iBAevB,EAf6C,gBAe7C,CAAkB,GAAlB,CAAN;AACD;;AAED,QAAM,SAAS,GAAG,IAAI,GAAJ,CAAQ,GAAR,CAAlB;AACA,SAAO;AACL,IAAA,IAAI,EAAE,SAAS,CAAC,IADX;AAEL,IAAA,QAAQ,EAAE,SAAS,CAAC,QAFf;AAGL,IAAA,IAAI,EAAE,SAAS,CAAC,IAHX;AAIL,IAAA,QAAQ,EAAE,SAAS,CAAC,QAJf;AAKL,IAAA,IAAI,EAAE,SAAS,CAAC,IALX;AAML,IAAA,QAAQ,EAAE,SAAS,CAAC,QANf;AAOL,IAAA,KAAK,EAAA,CAAA,GA3B8B,YA2B9B,EA3B6C,sBA2B7C,CAAyB,SAAS,CAAC,YAAnC,CAPA;AAQL,IAAA,MAAM,EAAE,SAAS,CAAC;AARb,GAAP;AAUD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseUrl = parseUrl;\nvar _querystring = require(\"./querystring\");\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\nfunction parseUrl(url) {\n    if (url.startsWith('/')) {\n        return (0, _parseRelativeUrl).parseRelativeUrl(url);\n    }\n    const parsedURL = new URL(url);\n    return {\n        hash: parsedURL.hash,\n        hostname: parsedURL.hostname,\n        href: parsedURL.href,\n        pathname: parsedURL.pathname,\n        port: parsedURL.port,\n        protocol: parsedURL.protocol,\n        query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n        search: parsedURL.search\n    };\n}\n\n//# sourceMappingURL=parse-url.js.map"]},"metadata":{},"sourceType":"script"}