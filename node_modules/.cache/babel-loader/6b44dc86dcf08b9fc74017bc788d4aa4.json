{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMiddlewareRegex = getMiddlewareRegex;\n\nvar _routeRegex = require(\"./route-regex\");\n\nfunction getMiddlewareRegex(normalizedRoute) {\n  let catchAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const result = (0, _routeRegex).getParametrizedRoute(normalizedRoute);\n  let catchAllRegex = catchAll ? '(?!_next).*' : '';\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';\n\n  if ('routeKeys' in result) {\n    if (result.parameterizedRoute === '/') {\n      return {\n        groups: {},\n        namedRegex: `^/${catchAllRegex}$`,\n        re: new RegExp(`^/${catchAllRegex}$`),\n        routeKeys: {}\n      };\n    }\n\n    return {\n      groups: result.groups,\n      namedRegex: `^${result.namedParameterizedRoute}${catchAllGroupedRegex}$`,\n      re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`),\n      routeKeys: result.routeKeys\n    };\n  }\n\n  if (result.parameterizedRoute === '/') {\n    return {\n      groups: {},\n      re: new RegExp(`^/${catchAllRegex}$`)\n    };\n  }\n\n  return {\n    groups: {},\n    re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`)\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/get-middleware-regex.ts"],"names":[],"mappings":";;;;;QAEgB,kB,GAAA,kB;;AAFiC,IAAA,WAAe,GAAA,OAAA,CAAA,eAAA,CAAf;;SAEjC,kB,CACd,e,EAEY;AAAA,MADZ,QACY,uEADQ,IACR;AACZ,QAAM,MAAM,GAAA,CAAA,GANmC,WAMnC,EANkD,oBAMlD,CAAwB,eAAxB,CAAZ;AAEA,MAAI,aAAa,GAAG,QAAQ,GAAG,aAAH,GAAmB,EAA/C;AACA,MAAI,oBAAoB,GAAG,QAAQ,GAAG,YAAH,GAAkB,EAArD;;AAEA,MAAI,eAAe,MAAnB,EAA2B;AACzB,QAAI,MAAM,CAAC,kBAAP,KAA8B,GAAlC,EAAuC;AACrC,aAAO;AACL,QAAA,MAAM,EAAE,EADH;AAEL,QAAA,UAAU,EAAG,KAAI,aAAc,GAF1B;AAGL,QAAA,EAAE,EAAE,IAAI,MAAJ,CAAY,KAAI,aAAc,GAA9B,CAHC;AAIL,QAAA,SAAS,EAAE;AAJN,OAAP;AAMD;;AAED,WAAO;AACL,MAAA,MAAM,EAAE,MAAM,CAAC,MADV;AAEL,MAAA,UAAU,EAAG,IAAG,MAAM,CAAC,uBAAuB,GAAG,oBAAqB,GAFjE;AAGL,MAAA,EAAE,EAAE,IAAI,MAAJ,CAAY,IAAG,MAAM,CAAC,kBAAkB,GAAG,oBAAqB,GAAhE,CAHC;AAIL,MAAA,SAAS,EAAE,MAAM,CAAC;AAJb,KAAP;AAMD;;AAED,MAAI,MAAM,CAAC,kBAAP,KAA8B,GAAlC,EAAuC;AACrC,WAAO;AACL,MAAA,MAAM,EAAE,EADH;AAEL,MAAA,EAAE,EAAE,IAAI,MAAJ,CAAY,KAAI,aAAc,GAA9B;AAFC,KAAP;AAID;;AAED,SAAO;AACL,IAAA,MAAM,EAAE,EADH;AAEL,IAAA,EAAE,EAAE,IAAI,MAAJ,CAAY,IAAG,MAAM,CAAC,kBAAkB,GAAG,oBAAqB,GAAhE;AAFC,GAAP;AAID","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getMiddlewareRegex = getMiddlewareRegex;\nvar _routeRegex = require(\"./route-regex\");\nfunction getMiddlewareRegex(normalizedRoute, catchAll = true) {\n    const result = (0, _routeRegex).getParametrizedRoute(normalizedRoute);\n    let catchAllRegex = catchAll ? '(?!_next).*' : '';\n    let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';\n    if ('routeKeys' in result) {\n        if (result.parameterizedRoute === '/') {\n            return {\n                groups: {\n                },\n                namedRegex: `^/${catchAllRegex}$`,\n                re: new RegExp(`^/${catchAllRegex}$`),\n                routeKeys: {\n                }\n            };\n        }\n        return {\n            groups: result.groups,\n            namedRegex: `^${result.namedParameterizedRoute}${catchAllGroupedRegex}$`,\n            re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`),\n            routeKeys: result.routeKeys\n        };\n    }\n    if (result.parameterizedRoute === '/') {\n        return {\n            groups: {\n            },\n            re: new RegExp(`^/${catchAllRegex}$`)\n        };\n    }\n    return {\n        groups: {\n        },\n        re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`)\n    };\n}\n\n//# sourceMappingURL=get-middleware-regex.js.map"]},"metadata":{},"sourceType":"script"}