{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franci\\\\Desktop\\\\starting-projects-Udemy\\\\10-starting-project (authentication)\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const handleSwitchAuthMode = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const handleSubmit = event => {\n    _s();\n\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    useContext(AuthContext); // *optional -> adding validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\";\n    }\n\n    ;\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication message failed!\"; // if ( data && data.error && data.error.message ) {\n          //   errorMessage = data.error.message;\n          // };\n\n          throw new Error(errorMessage);\n        }).then(data => {\n          console.log(data);\n        }).catch(err => {\n          alert(err.message);\n        });\n      }\n\n      ;\n    });\n  };\n\n  _s(handleSubmit, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Still Loading Request ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: handleSwitchAuthMode,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthForm, \"V/71c6mL9+SSvQpSg5GaNEew8Xg=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/Franci/Desktop/starting-projects-Udemy/10-starting-project (authentication)/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","classes","AuthContext","AuthForm","emailInputRef","passwordInputRef","isLoading","setIsLoading","isLogin","setIsLogin","handleSwitchAuthMode","prevState","handleSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","console","log","catch","err","alert","message","auth","control","actions","toggle"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,MAFF,EAGEC,UAHF,QAIO,OAJP;AAMA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACrB,QAAMC,aAAa,GAAGL,MAAM,EAA5B;AACA,QAAMM,gBAAgB,GAAGN,MAAM,EAA/B;AACA,QAAM,CAAEO,SAAF,EAAaC,YAAb,IAA8BT,QAAQ,CAAG,KAAH,CAA5C;AACA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAG,IAAH,CAAxC;;AAEA,QAAMY,oBAAoB,GAAG,MAAM;AACjCD,IAAAA,UAAU,CACNE,SAAF,IAAiB,CAACA,SADV,CAAV;AAGD,GAJD;;AAMA,QAAMC,YAAY,GAAKC,KAAF,IAAa;AAAA;;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,YAAY,GAAGX,aAAa,CAACY,OAAd,CAAsBC,KAA3C;AACA,UAAMC,eAAe,GAAGb,gBAAgB,CAACW,OAAjB,CAAyBC,KAAjD;AACAjB,IAAAA,UAAU,CAACE,WAAD,CAAV,CALgC,CAOhC;;AAEAK,IAAAA,YAAY,CAAG,IAAH,CAAZ;AACA,QAAIY,GAAJ;;AAEA,QAAKX,OAAL,EAAe;AACbW,MAAAA,GAAG,GAAG,mHAAN;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,GAAG,uGAAN;AACD;;AAAA;AAEDC,IAAAA,KAAK,CACHD,GADG,EAEH;AACEE,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AACpBC,QAAAA,KAAK,EAAEV,YADa;AAEpBW,QAAAA,QAAQ,EAAER,eAFU;AAGpBS,QAAAA,iBAAiB,EAAE;AAHC,OAAhB,CAFR;AAOEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAPX,KAFG,CAAL,CAaEC,IAbF,CAcIC,GAAF,IAAW;AACTvB,MAAAA,YAAY,CAAG,KAAH,CAAZ;;AACA,UAAKuB,GAAG,CAACC,EAAT,EAAc;AACZ,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACL,eAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CACHI,IAAF,IAAY;AACV,cAAIC,YAAY,GAAG,gCAAnB,CADU,CAEV;AACA;AACA;;AAEA,gBAAM,IAAIC,KAAJ,CAAYD,YAAZ,CAAN;AACD,SARI,EASLL,IATK,CAULI,IAAI,IAAI;AACNG,UAAAA,OAAO,CAACC,GAAR,CAAaJ,IAAb;AACD,SAZI,EAaLK,KAbK,CAcLC,GAAG,IAAI;AACLC,UAAAA,KAAK,CAAGD,GAAG,CAACE,OAAP,CAAL;AACD,SAhBI,CAAP;AAkBD;;AAAA;AACF,KAtCH;AAyCD,GA3DD;;AAZqB,KAYf7B,YAZe;;AAyErB,sBACE;AAAS,IAAA,SAAS,EAAKX,OAAO,CAACyC,IAA/B;AAAA,4BAEE;AAAA,gBAEIlC,OAAO,GAAG,OAAH,GAAa;AAFxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAM,MAAA,QAAQ,EAAKI,YAAnB;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAKX,OAAO,CAAC0C,OAA3B;AAAA,gCAEE;AAAO,UAAA,OAAO,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AACE,UAAA,IAAI,EAAG,OADT;AAEE,UAAA,EAAE,EAAG,OAFP;AAGE,UAAA,GAAG,EAAKvC,aAHV;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAiBE;AAAK,QAAA,SAAS,EAAKH,OAAO,CAAC0C,OAA3B;AAAA,gCAEE;AAAO,UAAA,OAAO,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AACE,UAAA,IAAI,EAAG,UADT;AAEE,UAAA,EAAE,EAAG,UAFP;AAGE,UAAA,GAAG,EAAKtC,gBAHV;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAgCE;AAAK,QAAA,SAAS,EAAKJ,OAAO,CAAC2C,OAA3B;AAAA,mBAEE,CAACtC,SAAD,iBAEA;AAAA,oBAEIE,OAAO,GAAG,OAAH,GAAa;AAFxB;AAAA;AAAA;AAAA;AAAA,gBAJF,EAaEF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbf,eAeE;AACE,UAAA,IAAI,EAAG,QADT;AAEE,UAAA,SAAS,EAAKL,OAAO,CAAC4C,MAFxB;AAGE,UAAA,OAAO,EAAKnC,oBAHd;AAAA,oBAMIF,OAAO,GAAG,oBAAH,GAA0B;AANrC;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwED,CAjJD;;IAAML,Q;;KAAAA,Q;AAmJN,eAAeA,QAAf","sourcesContent":["import {\n  useState,\n  useRef,\n  useContext\n} from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../store/auth-context\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef ();\n  const passwordInputRef = useRef ();\n  const [ isLoading, setIsLoading ] = useState ( false );\n  const [ isLogin, setIsLogin ] = useState ( true );\n\n  const handleSwitchAuthMode = () => {\n    setIsLogin (\n      ( prevState ) => !prevState\n    );\n  };\n\n  const handleSubmit = ( event ) => {\n    event.preventDefault ();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    useContext(AuthContext);\n\n    // *optional -> adding validation\n\n    setIsLoading ( true );\n    let url;\n\n    if ( isLogin ) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZ9wc5jvpLUYnZefBqWCWlsocKQjUsqCQ\";\n    };\n\n    fetch (\n      url,\n      {\n        method: \"POST\",\n        body: JSON.stringify ({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(\n      ( res ) => {\n        setIsLoading ( false );\n        if ( res.ok ) {\n          return res.json();\n        } else {\n          return res.json().then(\n            ( data ) => {\n              let errorMessage = \"Authentication message failed!\";\n              // if ( data && data.error && data.error.message ) {\n              //   errorMessage = data.error.message;\n              // };\n\n              throw new Error ( errorMessage );\n            }\n          ).then(\n            data => {\n              console.log( data );\n            }\n          ).catch(\n            err => {\n              alert ( err.message );\n            }\n          );\n        };\n      }\n    );\n\n  };\n\n  return (\n    <section className = { classes.auth }>\n      \n      <h1>\n        {\n          isLogin ? \"Login\" : \"Sign Up\"\n        }\n      </h1>\n\n      <form onSubmit = { handleSubmit }>\n        \n        <div className = { classes.control }>\n\n          <label htmlFor = \"email\">\n            Your Email\n          </label>\n\n          <input\n            type = \"email\"\n            id = \"email\"\n            ref = { emailInputRef }\n            required\n          />\n\n        </div>\n\n        <div className = { classes.control }>\n\n          <label htmlFor = \"password\">\n            Your Password\n          </label>\n\n          <input\n            type = \"password\"\n            id = \"password\"\n            ref = { passwordInputRef }\n            required\n          />\n\n        </div>\n\n        <div className = { classes.actions }>\n\n        { !isLoading && \n          (\n          <button>\n            {\n              isLogin ? \"Login\" : \"Create Account\"\n            }\n          </button>\n          )\n        }\n\n        {\n          isLoading && <p>Still Loading Request ...</p>\n        }\n          <button\n            type = \"button\"\n            className = { classes.toggle }\n            onClick = { handleSwitchAuthMode }\n          >\n            {\n              isLogin ? \"Create new account\" : \"Login with existing account\"\n            }\n          </button>\n        \n        </div>\n      \n      </form>\n\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}