{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  const query = {};\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  const result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(_ref => {\n    let [key, value] = _ref;\n\n    if (Array.isArray(value)) {\n      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n\n  searchParamsList.forEach(searchParams => {\n    Array.from(searchParams.keys()).forEach(key => target.delete(key));\n    searchParams.forEach((value, key) => target.append(key, value));\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/querystring.ts"],"names":[],"mappings":";;;;;QAEgB,sB,GAAA,sB;QA4BA,sB,GAAA,sB;QAcA,M,GAAA,M;;SA1CA,sB,CACd,Y,EACgB;AAChB,QAAM,KAAK,GAAmB,EAA9B;AACA,EAAA,YAAY,CAAC,OAAb,CAAoB,CAAE,KAAF,EAAS,GAAT,KAAiB;AACnC,QAAI,OAAO,KAAK,CAAC,GAAD,CAAZ,KAAsB,WAA1B,EAAuC;AACrC,MAAA,KAAK,CAAC,GAAD,CAAL,GAAa,KAAb;AACD,KAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,GAAD,CAAnB,CAAJ,EAA+B;AAClC,MAAA,KAAK,CAAC,GAAD,CAAL,CAAwB,IAAxB,CAA6B,KAA7B;AACH,KAFM,MAEA;AACL,MAAA,KAAK,CAAC,GAAD,CAAL,GAAa,CAAC,KAAK,CAAC,GAAD,CAAN,EAAuB,KAAvB,CAAb;AACD;AACF,GARD;AASA,SAAO,KAAP;AACD;;SAEQ,sB,CAAuB,K,EAAuB;AACrD,MACE,OAAO,KAAP,KAAiB,QAAjB,IACC,OAAO,KAAP,KAAiB,QAAjB,IAAyB,CAAK,KAAK,CAAC,KAAD,CADpC,IAEA,OAAO,KAAP,KAAiB,SAHnB,EAIE;AACA,WAAO,MAAM,CAAC,KAAD,CAAb;AACD,GAND,MAMO;AACL,WAAO,EAAP;AACD;AACF;;SAEe,sB,CACd,Q,EACiB;AACjB,QAAM,MAAM,GAAG,IAAI,eAAJ,EAAf;AACA,EAAA,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,OAAzB,CAAgC,QAAmB;AAAA,QAAnB,CAAG,GAAH,EAAQ,KAAR,CAAmB;;AACjD,QAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,MAAA,KAAK,CAAC,OAAN,CAAe,IAAF,IAAW,MAAM,CAAC,MAAP,CAAc,GAAd,EAAmB,sBAAsB,CAAC,IAAD,CAAzC,CAAxB;AACD,KAFD,MAEO;AACL,MAAA,MAAM,CAAC,GAAP,CAAW,GAAX,EAAgB,sBAAsB,CAAC,KAAD,CAAtC;AACD;AACF,GAND;AAOA,SAAO,MAAP;AACD;;SAEe,M,CACd,M,EAEiB;AAAA,oCADd,gBACc;AADd,IAAA,gBACc;AAAA;;AACjB,EAAA,gBAAgB,CAAC,OAAjB,CAA0B,YAAF,IAAmB;AACzC,IAAA,KAAK,CAAC,IAAN,CAAW,YAAY,CAAC,IAAb,EAAX,EAAgC,OAAhC,CAAyC,GAAF,IAAU,MAAM,CAAC,MAAP,CAAc,GAAd,CAAjD;AACA,IAAA,YAAY,CAAC,OAAb,CAAoB,CAAE,KAAF,EAAS,GAAT,KAAiB,MAAM,CAAC,MAAP,CAAc,GAAd,EAAmB,KAAnB,CAArC;AACD,GAHD;AAIA,SAAO,MAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {\n    };\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach(([key, value])=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item))\n            );\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target, ...searchParamsList) {\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key)\n        );\n        searchParams.forEach((value, key)=>target.append(key, value)\n        );\n    });\n    return target;\n}\n\n//# sourceMappingURL=querystring.js.map"]},"metadata":{},"sourceType":"script"}